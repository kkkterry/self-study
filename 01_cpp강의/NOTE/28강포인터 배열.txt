28강. 포인터 배열

int main(){

	int* pInt = nullptr;
	
	char* pChar = nullptr;
	short* pShort = nullptr;

	// 포인터 변수의 크기는 8 바이트이다.
	int isize = sizeof(pInt);
	
	int i = 0;
	pInt = &i;
	pInt += 1;
	// pInt는  int* 변수이기 때문에, 가리키는 곳은 int로 해석한다.
	// 따라서 주소값을 1 증가하는 의미는 다음 int로 접근하기 위해서 sizeof(int) 단위로 증가하게 된다.
	
	// 포인터와 배열
	// 배열의 특징
	// 1. 메모리가 연속적인 구조이다.
	// 2. 배열의 이름은 배열의 시작 주소이다.
	int iArr[10] = {};
	
	//int 단위로 접근
	*(iArr + 0) = 10;		// iArr[0] = 10;
	*(iArr + 1) = 10;		// iArr[1] = 10;
	



	return 0;

}